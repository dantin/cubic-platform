server:
  port: ${SERVER_PORT:0}
  servlet:
    context-path: /

spring:
  application:
    name: room-service
  datasource:
    url: jdbc:postgresql://localhost:5432/room_db?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
    platform: all
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 8
      min-idle: 2
      max-active: 8
      max-wait: 12000 # time to wait for connection setup
      time-between-eviction-runs-millis: 10000 # time for checking connection in millisecond
      min-evictable-idle-time-millis: 30001 # time for a connection to live in millisecond
      validation-query: SELECT 1
      validation-query-timeout: 5
      test-on-borrow: true
      test-on-return: true
      test-while-idle: true
      pool-prepared-statements: true # enable PSCache
      max-pool-prepared-statement-per-connection-size: 5 # PSCache size
      async-close-connection-enable: true
      transaction-query-timeout: 6000
      remove-abandoned-timeout: 1800
      filter:
        stat:
          db-type: postgresql
          log-slow-sql: true
          show-sql-millis: 5000
  cache:
    type: redis
  redis:
    database: 1
    host: ${REDIS_SERVER_HOST:localhost}
    port: 6379
    password: password
    timeout: 2000
    ssl: false
    jedis:
      pool:
        max-active: 10
        max-wait: 5000ms
        max-idle: 8
        min-idle: 2

eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 15
    service-url:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka}

mybatis:
  config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/**.xml
  type-aliases-package: com.github.dantin.cubic.user.repository
  #type-handlers-package:

logging:
  level:
    ROOT: info
    com.github.dantin: debug

---
# For development in docker container
spring:
  profiles: docker
  datasource:
    url: jdbc:postgresql://postgres:5432/room_db?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
